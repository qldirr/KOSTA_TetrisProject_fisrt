<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.tetris.mapper.HrMapper">

	<!-- 사원페이지 처음들어갔을때 -->
	<select id="getHr" resultType="org.tetris.domain.HrVO">
		select h.hr_num as hr_num, e.e_name as e_name, e.e_num as e_num, d.d_name as d_name, 
        	e.e_position as e_position, h.hr_date as hr_date, h.hr_leave as hr_leave,
        	h.hr_status as hr_status, h.hr_note as hr_note
    		from employee e right join department d
    			on e.d_num = d.d_num
    		left outer join hr h
    			on e.e_id = h.e_id
            where e.e_id = #{e_id} 
            	AND (to_char(h.hr_date,'yyyymmdd') =to_char(sysdate, 'yyyymmdd')OR h.hr_date is null)
	</select>

	<!-- 사원이 속한 부서의 리스트 가지고오기 -->
	<select id="getHrList" resultType="org.tetris.domain.HrVO">
		select h.hr_num as hr_num, e.e_name as e_name, e.e_num as e_num, d.d_name as d_name, e.e_position as e_position, h.hr_date as hr_date, h.hr_leave as hr_leave,
   			 h.hr_status as hr_status, h.hr_note as hr_note
    		from employee e right join hr h
    		on e.e_id = h.e_id
    		join department d
    		on e.d_num = d.d_num
    		where d.d_num = (select d_num from employee where e_id = #{e_id})
	</select>
	
	
 	<!-- 한사원의 정보 -->
<!--	<select id="getHr" resultType="org.tetris.domain.HrVO">
		select h.hr_num as hr_num, e.e_name as e_name, e.e_num as e_num, d.d_name as d_name, e.e_position as e_position, h.hr_date as hr_date, h.hr_leave as hr_leave,
   			 h.hr_status as hr_status, h.hr_note as hr_note
    		from employee e right join hr h
    		on e.e_id = h.e_id
    		join department d
    		on e.d_num = d.d_num
    		where to_char(hr_date, 'yyyymmdd')=to_char(sysdate, 'yyyymmdd')
	</select> -->

	<!-- 출근하기 -->
	<insert id="startDate">
		<![CDATA[
 			insert into hr (hr_num, hr_date, hr_status, hr_note, e_id) 
	        select seq_hr.nextval, sysdate, 
		       (case when (to_char(sysdate, 'HH24:MI:SS') > cast('09:00:00' as char)) then '지각' else '출근' end)
	        , '--', #{e_id}
	        from dual 
	        where not exists
       		 (select * from hr where e_id=#{e_id} AND to_char(hr_date, 'yyyymmdd')=to_char(sysdate, 'yyyymmdd'))
		]]>
	</insert>
	
	<!-- 외근 -->
	<update id="outDate">
		update hr set hr_status='외근' where e_id = #{e_id} and to_char(hr_date, 'yyyymmdd')=to_char(sysdate, 'yyyymmdd')
	</update>
	
	<!-- 퇴근 -->
	<update id="endDate">
		update hr set hr_leave = sysdate, hr_status='퇴근' where e_id = #{e_id} and to_char(hr_date, 'yyyymmdd')=to_char(sysdate, 'yyyymmdd')
	</update>

	<!-- 오늘리스트 출력 -->  <!-- 
	<select id="listHr" resultType="org.tetris.domain.HrVO">
		select h.hr_num, e.e_name, d.d_name, e.e_position, h.hr_date, h.hr_leave,
	    	h.hr_status, h.hr_note
	    	from employee e right join hr h
	    	on e.e_id = h.e_id
	    	join department d
	    	on e.d_num = d.d_num
	    	where to_char(h.hr_date, 'yyyymmdd')=to_char(sysdate, 'yyyymmdd');
	</select> -->
	
	
	
	<!-- personAll.jsp -->
	
	<!-- 들어가자마자 모든부서의 리스트 가져오기(페이징처리, 검색) -->
	<select id="getHrAll" resultType="org.tetris.domain.HrVO">
		select h.hr_num as hr_num, e.e_name as e_name, e.e_num as e_num, d.d_name as d_name, e.e_position as e_position, h.hr_date as hr_date, h.hr_leave as hr_leave,
   			 h.hr_status as hr_status, h.hr_note as hr_note
    		from employee e right join hr h
    		on e.e_id = h.e_id
    		join department d
    		on e.d_num = d.d_num
	</select>
	
	<select id="getHrWithPaging" resultType="org.tetris.domain.HrVO">
		<![CDATA[
			select rn, hr_num, e_name, e_num, d_name, e_position, hr_date, hr_leave,
				hr_status, hr_note from
				(select /*+INDEX_DESC(hr pk_hr_num) */ rownum as rn, h.hr_num as hr_num, 
				e.e_name as e_name, e.e_num as e_num, d.d_name as d_name, e.e_position as e_position, 
				h.hr_date as hr_date, h.hr_leave as hr_leave,
	   			 h.hr_status as hr_status, h.hr_note as hr_note
	    		from employee e right join hr h
	    		on e.e_id = h.e_id
	    		join department d
	    		on e.d_num = d.d_num where rownum <= #{pageNum} * #{amount}) 
	    		where rn > (#{pageNum} -1) * #{amount}
		]]>
	</select>
	
	<select id="getTotalCount" resultType="int">
		select count(*) from (select h.hr_num as hr_num, e.e_name as e_name, e.e_num as e_num, d.d_name as d_name, e.e_position as e_position, h.hr_date as hr_date, h.hr_leave as hr_leave,
   			 h.hr_status as hr_status, h.hr_note as hr_note
    		from employee e right join hr h
    		on e.e_id = h.e_id
    		join department d
    		on e.d_num = d.d_num) where hr_num > 0
	</select>
	






</mapper>