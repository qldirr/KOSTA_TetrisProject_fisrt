<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.tetris.mapper.ElecAuthMapper">

	<insert id="insertElecLine" parameterType="String">
		insert into elecline (l_num, l_status, l_seq, e_id)
			values (#{l_num}, '결재전', #{l_seq}, #{e_id})
	</insert>

	<insert id="insertElecAuth" parameterType="org.tetris.domain.elecauth.ElecAuthVO">
	
		<selectKey keyProperty="el_num" order="BEFORE" resultType="long">
			select el_num_seq.nextval from dual
		</selectKey>
		insert into elecauth (el_num, el_name, el_contents, el_regdate, el_status, el_startdate, el_enddate, l_num, dm_num, e_id) 
			values (#{el_num}, #{el_name}, #{el_contents}, #{el_regdate}, '결재전', #{el_startdate}, #{el_enddate}, #{el_num}, #{dm_num}, #{e_id})
	</insert>

	<update id="updateElecLine" parameterType="org.tetris.domain.elecauth.ElecAuthVO">
		update elecline set l_num = #{el_num} where l_num = #{e_id}
	</update>
	
	<select id="getListElecLine" parameterType="String" resultType="org.tetris.domain.elecauth.ElecLineVO">
		select l_num, l_status, l_checkdate, l_seq, l.e_id, e.e_name, e.e_position
   			from elecline l join employee e on l.e_id = e.e_id
   			where l_num = #{l_num} order by l_seq
	</select>
	
	<select id="getListElecAuth" parameterType="String" resultType="org.tetris.domain.elecauth.ElecAuthVO">
		select * from elecauth_v where e_id = #{e_id} and el_status in ('결재전', '결재진행중') order by el_num desc
	</select>
	
	
	<select id="readElecAuth" resultType="org.tetris.domain.elecauth.ElecAuthVO">
		select * from  elecauth_v where el_num = #{el_num}
	</select>
	
	<select id="readRecentDoc" resultType="long">
		select el_num from 
			(select el_num from elecauth where e_id = #{e_id} order by el_num desc) 
		where rownum = 1
	</select>
	
	<select id="getListUncheckedList" resultType="org.tetris.domain.elecauth.ElecAuthVO">
		select * from  elecauth_v where el_num in (
			select l_num from 
				(select l_num, l_status, lag(l_status, 1) over (partition by l_num order by l_seq asc) beforestatus, l_checkdate, l_seq, e_id from elecline)
		where (beforestatus = '결재완료' or beforestatus is null) and l_status = '결재전' and e_id = #{e_id})
	</select>
	
	
	<select id="countListUncheckedList" resultType="int">
		select count(*) from  elecauth_v where el_num in (
			select l_num from 
				(select l_num, l_status, lag(l_status, 1) over (partition by l_num order by l_seq asc) beforestatus, l_checkdate, l_seq, e_id from elecline)
		where (beforestatus = '결재완료' or beforestatus is null) and l_status = '결재전' and e_id = #{e_id})
	</select>
	
	
	<select id="countListProceeding" resultType="int">
		select count(*) from elecauth where el_status = '결재진행중' and e_id = #{e_id}	
	</select>
	
	
	<update id="updateElecStatus">
		update elecline set l_status = #{l_status}, l_checkdate = sysdate where l_num = #{l_num} and e_id = #{e_id}
	</update>
	
	<select id="getListDisapproved" resultType="org.tetris.domain.elecauth.ElecAuthVO">
		select el_num, el_name, el_contents, el_regdate, el_status, dm_num, el.l_num, el.e_id, el.e_name, el_startdate, el_enddate
			from elecauth_v el join elecline l on l.l_num = el.l_num where l.l_status='반려' and el.e_id = #{e_id}
	</select>
	
	<select id="countListDisapproved" resultType="int">
		select count(*) from (
    		select el_num, el_name, el_contents, el_regdate, el_status, dm_num, el.l_num, el.e_id, el.e_name, el_startdate, el_enddate
				from elecauth_v el join elecline l on l.l_num = el.l_num where l.l_status='반려' and el.e_id = 'gdong123'
		);
	</select>
	
	<update id="updateElecProcess" parameterType="String">
		update elecauth set el_status = #{el_status} where el_num = #{l_num}
	</update>
	
	<update id="updateElecAuth">
		update elecauth set el_name = #{el_name}, el_status = '결재전', el_contents = #{el_contents}, el_regdate = #{el_regdate} where el_num = #{el_num}
	</update>
	
	
	<update id="resetElecLine">
		update elecline set l_status = '결재전' where l_num = #{l_num}
	</update>
	
	
	<select id="countElecAuthStatus" resultType="long">
		select count(*) from elecline where l_status in ('결재전', '반려') and l_num = #{l_num}
	</select>
	
	
	<delete id="deleteElecAuth">
		delete from elecauth where el_num = #{el_num}
	</delete>


	<!-- 발신함 : 발신한 모든 파일  -->	
	<select id="sendList" parameterType="String" resultType="org.tetris.domain.elecauth.ElecAuthVO">
		select * from elecauth_v where e_id = #{e_id} order by el_regdate desc
	</select>	

	<!-- 수신함 : 결재 완료 상태인 수신 문서  
	<select id="getList" parameterType="String" resultType="org.tetris.domain.elecauth.ElecAuthVO">
		select el.el_num, el.el_name, el.el_contents, el.e_id, el.el_status, el.el_regdate, el.el_enddate
   			from elecauth el join elecline l on el.l_num = l.l_num
   				where el_status=('결재완료') 
   			and l.e_id = #{e_id}
	</select>	-->

	<!-- 수신함 : 결재 완료 상태인 수신 문서  -->
	<select id="getList" parameterType="String" resultType="org.tetris.domain.elecauth.ElecAuthVO">
		select *
   			from elecauth_v el join elecline l on el.l_num = l.l_num 
   			where el_status=('결재완료') 
   			and l.e_id = #{e_id} order by el_regdate desc
	</select>	





</mapper>









